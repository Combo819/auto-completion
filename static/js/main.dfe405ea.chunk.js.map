{"version":3,"sources":["components/tagItem.jsx","components/dropDown.jsx","components/table.jsx","components/marginBox.jsx","components/pureInput.jsx","App.js","serviceWorker.js","index.js"],"names":["TagItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","style","backgroundColor","color","text","onClick","crossClick","Component","DropDown","colors","_this2","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","tags","map","item","key","fold","tagItem","index","deleteTag","Table","console","log","info","scope","content","MarginBox","randomstring","require","PureInput","enterPress","e","inputValue","trim","setState","prevState","concat","toConsumableArray","getTagsWidth","findIndex","getColor","moreShow","setPadding","tableInfo","source","sourceFilter","handleChange","bind","assertThisInitialized","generateSource","arrFilter","dropDownClick","dropDownInputChange","tagsWidthAfterDelete","length","Math","floor","random","value","filter","indexOf","generate","n","num","i","push","round","charset","capitalization","sourceConcat","_this3","newTags","splice","foldIndex","inputMask","document","getElementById","width","window","getComputedStyle","getPropertyValue","paddingLeft","event","_this4","target","totalTags","reduce","pre","next","_this5","_this6","_this7","position","marginBox","zIndex","left","right","marginLeft","marginRight","flexWrap","dropDown","type","onChange","onKeyPress","submitTag","wordWrap","tooltip","title","stopPropagation","height","name","min","max","placeholder","dropDownRight","table","App","pureInput","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dfe405ea.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass TagItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"tag mx-2 py-1\">\n        <div\n          style={{ backgroundColor: this.props.color }}\n          className=\"tag-inner pl-1\"\n        >\n          <div className=\"tag-text mx-1\">{this.props.text}</div>\n          <div className=\"tag-text mx-1\">+</div>\n          <div onClick={this.props.crossClick} className=\"tag-text mx-1 cursor\">\n            &times;\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TagItem;\n","import React, { Component } from \"react\";\nimport TagItem from \"./tagItem\";\nclass DropDown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colors: [\n        \"#ff7875\",\n        \"#ff9c6e\",\n        \"#ffc069\",\n        \"#ffd666\",\n        \"#fff566\",\n        \"#d3f261\",\n        \"#95de64\",\n        \"#5cdbd3\",\n        \"#69c0ff\",\n        \"#85a5ff\",\n        \"#b37feb\",\n        \"#ff85c0\"\n      ]\n    };\n  }\n  render() {\n    return (\n      <div className=\"tag mx-2 py-1\">\n        <div\n          style={{ backgroundColor: \"#595959\" }}\n          className=\"tag-inner pl-1 dropdown\"\n        >\n          <div className=\"tag-text mx-1\">More</div>\n          <div\n            id=\"dropdownMenuButton\"\n            className=\"tag-text mx-1 cursor\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            <i className=\"material-icons mt-1\">keyboard_arrow_down</i>\n          </div>\n          <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n            {//this.props.tags.map((item,key)=>item.fold?<span className=\"dropdown-item\" key={key}>{item.text}</span>:false)\n            this.props.tags.map((item, key) =>\n              item.fold ? (\n                <TagItem\n                  index={key}\n                  crossClick={() => this.props.deleteTag(key)}\n                  key={key}\n                  text={item.text}\n                  color={item.color}\n                />\n              ) : (\n                false\n              )\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DropDown;\n","import React, { Component } from \"react\";\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    console.log(this.props.info);\n  }\n  render() {\n    \n    return (\n      <div>\n        <table className=\"table table-dark\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Value</th>\n              <th scope=\"col\">Description</th>\n\n            </tr>\n            {this.props.info.map((item, key) => {\n              return (\n                <tr key={key}>\n                  <th scope=\"col\">{key}</th>\n                  <th scope=\"col\">{item.text}</th>\n                  <th scope=\"col\">{item.content||'Null'}</th>\n                </tr>\n              );\n            })}\n          </thead>\n          <tbody />\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import React, { Component } from \"react\";\nclass MarginBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className=\"row mb-5\">\n        <div className=\"col-sm\" />\n        <div className=\"col-sm\" />\n        <div className=\"col-sm\" />\n      </div>\n    );\n  }\n}\n\nexport default MarginBox;\n","import React, { Component } from \"react\";\nimport TagItem from \"./tagItem\";\nimport DropDown from \"./dropDown\";\nimport Table from \"./table\";\nimport MarginBox from \"./marginBox\";\nimport { Tooltip } from \"antd\";\n\nconst randomstring = require(\"randomstring\");\n\nclass PureInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tags: [],\n      tableInfo: [],\n      source: [],\n      inputValue: \"\",\n      moreShow: false,\n      sourceFilter: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.deleteTag = this.deleteTag.bind(this);\n    this.getTagsWidth = this.getTagsWidth.bind(this);\n    this.generateSource = this.generateSource.bind(this);\n    this.arrFilter = this.arrFilter.bind(this);\n    this.dropDownClick = this.dropDownClick.bind(this);\n    this.dropDownInputChange = this.dropDownInputChange.bind(this);\n    this.tagsWidthAfterDelete = this.tagsWidthAfterDelete.bind(this);\n    this.getColor = this.getColor.bind(this);\n  }\n  /**\n   * @description: When hit Enter in input box\n   * @param {Object}\n   * @return: None or false\n   */\n  enterPress = e => {\n    if (!this.state.inputValue) {\n      return false;\n    }\n    if (this.state.inputValue.trim() === \"\") {\n      this.setState({\n        inputValue: \"\"\n      });\n      return false;\n    }\n    this.setState(\n      prevState => ({\n        tags: [\n          ...prevState.tags,\n          {\n            text: prevState.inputValue.trim(),\n            fold:\n              this.getTagsWidth(this.state.inputValue) ||\n              this.state.tags.findIndex(item => item.fold === true) !== -1,\n            content: \"\",\n            color: this.getColor()\n          }\n        ],\n        inputValue: \"\"\n      }),\n      () => {\n        this.setState(\n          {\n            moreShow:\n              this.state.tags.findIndex(item => item.fold === true) !== -1\n          },\n          () => {\n            this.setPadding();\n          }\n        );\n      }\n    );\n  };\n  /**\n   * @description: randomly get one color for the tag, which should be different from the previous one\n   * @return: {String} color\n   */\n\n  getColor() {\n    const colors = [\n      \"#ff7875\",\n      \"#ff9c6e\",\n      \"#ffc069\",\n      \"#ffd666\",\n      \"#fff566\",\n      \"#d3f261\",\n      \"#95de64\",\n      \"#5cdbd3\",\n      \"#69c0ff\",\n      \"#85a5ff\",\n      \"#b37feb\",\n      \"#ff85c0\"\n    ];\n    if (!this.state.tags.length) {\n      return colors[Math.floor(Math.random() * colors.length)];\n    } else {\n      let color = colors[Math.floor(Math.random() * colors.length)];\n      while (color === this.state.tags[this.state.tags.length - 1].color) {\n        color = colors[Math.floor(Math.random() * colors.length)];\n      }\n      return color;\n    }\n  }\n  /**\n   * @description: filter the auto completion source\n   * @param {type}\n   * @return:\n   */\n  arrFilter() {\n    const value = this.state.inputValue;\n    const source = this.state.source;\n    const sourceFilter = source\n      .filter(item => {\n        return item.value.indexOf(value) === 0;\n      })\n      .map((item, key) => {\n        if (key % 3 === 2) {\n          item.content = randomstring.generate({ length: 10 });\n          return item;\n        } else {\n          return item;\n        }\n      });\n    this.setState({\n      sourceFilter\n    });\n  }\n  /**\n   * @description: generate fake auto completion source\n   * @param {number} n total random source\n   * @return:\n   */\n  generateSource(n) {\n    const num = n < 40 ? n : 40;\n    const source = [];\n    for (let i = 0; i < num; i++) {\n      source.push({\n        value: randomstring.generate({\n          length: Math.round(Math.random() * 10),\n          charset: \"alphabetic\",\n          capitalization: \"lowercase\"\n        }),\n        content: \"\"\n      });\n    }\n    const value = this.state.inputValue;\n    let sourceConcat = source.concat([\n      {\n        value,\n        content: \"\"\n      },\n      {\n        value: value + value,\n        content: \"\"\n      },\n      {\n        value: value + value + value,\n        content: \"\"\n      }\n    ]);\n    this.setState(\n      {\n        source: sourceConcat\n      },\n      () => {\n        this.arrFilter();\n      }\n    );\n  }\n  /**\n   * @description: remove a tag\n   * @param {number} index the index of the deleted tag\n   * @return:\n   */\n  deleteTag(index) {\n    const newTags = [...this.state.tags];\n    newTags.splice(index, 1);\n    let foldIndex = newTags.findIndex(item => {\n      return item.fold;\n    });\n    while (foldIndex !== -1 && this.tagsWidthAfterDelete(newTags, foldIndex)) {\n      console.log(newTags[foldIndex]);\n\n      newTags[foldIndex].fold = false;\n      foldIndex = newTags.findIndex(item => {\n        return item.fold;\n      });\n    }\n    this.setState(\n      {\n        tags: newTags\n      },\n      () => {\n        this.setState(\n          {\n            moreShow:\n              this.state.tags.findIndex(item => item.fold === true) !== -1\n          },\n          () => {\n            this.setPadding();\n            console.log(this.state.tags);\n          }\n        );\n      }\n    );\n  }\n  /**\n   * @description: set the layout of tags\n   * @param {type}\n   * @return:\n   */\n  setPadding() {\n    const inputMask = document.getElementById(\"inputMask\");\n    const width = window.getComputedStyle(inputMask).getPropertyValue(\"width\");\n    const inputItem = document.getElementById(\"inputItem\");\n    inputItem.style.paddingLeft = width;\n  }\n  /**\n   * @description: set the input of the main input box\n   * @param {type}\n   * @return:\n   */\n  handleChange(event) {\n    this.setState({ inputValue: event.target.value }, () => {\n      if (this.state.inputValue !== \"\") {\n        this.generateSource();\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.setPadding();\n  }\n\n  /**\n   * @description: If tags total width will exceed the input box\n   * @param {string} inputValue the input value in the main input box\n   * @return: Boolean\n   */\n  getTagsWidth(inputValue) {\n    const totalTags = this.state.tags.filter(item => !item.fold).length;\n    const totalString =\n      totalTags !== 0\n        ? this.state.tags.reduce((pre, next) => pre.text + next.text) +\n          inputValue\n        : inputValue;\n    return totalTags * 60 + totalString.length * 16 > 500;\n  }\n  /**\n   * @description: If tags total width will exceed the input box when remove a tag\n   * @param {array} newTags the tags list\n   * @param {number} foldIndex the first tag whose fold attribute is true\n   * @return: Boolean\n   */\n  tagsWidthAfterDelete(newTags, foldIndex) {\n    // a pair of brackets are necessary\n    const totalTags =\n      newTags.filter(item => !item.fold).length +\n      (foldIndex === newTags.length ? 0 : 1);\n\n    const totalString =\n      newTags.filter(item => !item.fold).length > 1\n        ? newTags\n            .filter(item => !item.fold)\n            .reduce((pre, next) => pre.text + next.text) +\n          newTags[foldIndex].text\n        : newTags[0].text;\n\n    return totalTags * 60 + totalString.length * 16 < 500;\n  }\n  /**\n   * @description: submit the tags and show them on the table\n   * @param {type}\n   * @return:\n   */\n  submitTag() {\n    this.setState({\n      tableInfo: this.state.tags\n    });\n  }\n\n  /**\n   * @description: when you click on one of the suggested option\n   * @param {number} key the key th option is clicked\n   * @return:\n   */\n  dropDownClick(key) {\n    if (!this.state.inputValue) {\n      return false;\n    }\n    this.setState(\n      prevState => ({\n        tags: [\n          ...prevState.tags,\n          {\n            text: this.state.sourceFilter[key].value,\n            fold:\n              this.getTagsWidth(this.state.inputValue) ||\n              this.state.tags.findIndex(item => item.fold === true) !== -1,\n            content: this.state.sourceFilter[key].content,\n            color: this.getColor()\n          }\n        ],\n        inputValue: \"\"\n      }),\n      () => {\n        this.setState(\n          {\n            moreShow:\n              this.state.tags.findIndex(item => item.fold === true) !== -1\n          },\n          () => {\n            this.setPadding();\n            console.log(this.state.tags);\n          }\n        );\n      }\n    );\n  }\n  /**\n   * @description: one of the input box options changes\n   * @param {object} e input event\n   * @param {number} key the key th option\n   * @return:\n   */\n  dropDownInputChange(e, key) {\n    const sourceFilter = [...this.state.sourceFilter];\n    sourceFilter[key].content = e.target.value;\n    this.setState(\n      {\n        sourceFilter\n      },\n      () => {\n        console.log(this.state.sourceFilter);\n      }\n    );\n  }\n\n  render() {\n    const dropDownRight = (key, item) => {\n      {\n        if (key % 3 === 0) {\n          return (\n            <input\n              onClick={e => e.stopPropagation()}\n              style={{\n                height: \"30px\",\n                position: \"absolute\",\n                right: \"10px\"\n              }}\n              onChange={e => {\n                this.dropDownInputChange(e, key);\n              }}\n              type=\"number\"\n              name=\"tentacles\"\n              min=\"10\"\n              max=\"100\"\n            />\n          );\n        } else if (key % 3 === 1) {\n          return (\n            <input\n              onClick={e => e.stopPropagation()}\n              style={{\n                height: \"30px\",\n                position: \"absolute\",\n                right: \"10px\"\n              }}\n              onChange={e => {\n                this.dropDownInputChange(e, key);\n              }}\n              placeholder=\"type in string\"\n              name=\"tentacles\"\n            />\n          );\n        } else {\n          return (\n            <span\n              style={{\n                height: \"30px\",\n                position: \"absolute\",\n                right: \"10px\"\n              }}\n            >\n              {item.content}\n            </span>\n          );\n        }\n      }\n    };\n    return (\n      <div>\n        <div style={{ position: \"relative\" }} className=\"container\">\n          <MarginBox />\n          <div className=\"row mb-5\">\n            <div className=\"col-sm\" />\n            <div className=\"col-sm h2\">Auto Completion</div>\n            <div className=\"col-sm\" />\n          </div>\n\n          <div className=\"row mt-5\">\n            <div className=\"col\" />\n            <div\n              style={{\n                position: \"absolute\",\n                zIndex: 1,\n                left: 0,\n                right: \"0\",\n                marginLeft: \" auto\",\n                marginRight: \"auto\"\n              }}\n              className=\"col-8\"\n            >\n              <div\n                style={{ flexWrap: \"nowrap\" }}\n                className=\"input-group mb-3  input-container \"\n              >\n                <div id=\"inputMask\" className=\"input-mask\">\n                  {this.state.tags.map((item, key) => {\n                    return item.fold ? (\n                      false\n                    ) : (\n                      <TagItem\n                        crossClick={() => this.deleteTag(key)}\n                        key={key}\n                        index={key}\n                        text={item.text}\n                        color={item.color}\n                      />\n                    );\n                  })}\n                  {this.state.moreShow ? (\n                    <DropDown\n                      deleteTag={this.deleteTag}\n                      tags={this.state.tags}\n                    />\n                  ) : (\n                    false\n                  )}\n                </div>\n                <input\n                  id=\"inputItem\"\n                  type=\"text\"\n                  className=\"form-control input-item\"\n                  value={this.state.inputValue}\n                  onChange={this.handleChange}\n                  onKeyPress={e => {\n                    if (e.key === \"Enter\") {\n                      this.enterPress(e);\n                    }\n                  }}\n                />\n                <button\n                  onClick={this.submitTag.bind(this)}\n                  type=\"button\"\n                  className=\"btn btn-primary ml-2\"\n                >\n                  submit\n                </button>\n              </div>\n              {this.state.inputValue.trim() !== \"\" ? (\n                <div>\n                  {this.state.sourceFilter.map((item, key) => (\n                    <div\n                      key={key}\n                      className=\"dropdown-item autoComplete container\"\n                    >\n                      <div\n                        onClick={() => {\n                          this.dropDownClick(key);\n                        }}\n                        style={{ position: \"relative\" }}\n                        className=\"row\"\n                      >\n                        {/*  <div\n                          style={{ width: \"500px\", wordWrap: \"break-word\" }}\n                          className=\"overflow-hidden\"\n                        >\n                          {item.value}\n                        </div> */}\n\n                        <div\n                          style={{ width: \"500px\", wordWrap: \"break-word\" }}\n                          className=\"overflow-hidden\"\n                        >\n                          {this.state.inputValue.length > 18 ? (\n                            <Tooltip title={item.value}>\n                              <span>{item.value}</span>\n                            </Tooltip>\n                          ) : (\n                            <span>{item.value}</span>\n                          )}\n                        </div>\n                        <div\n                          style={{ position: \"relative\" }}\n                          className=\"col-sm\"\n                        >\n                          {dropDownRight(key, item)}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : null}\n            </div>\n            <div className=\"col\" />\n          </div>\n          <MarginBox />\n          <MarginBox />\n          <Table info={this.state.tableInfo} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PureInput;\n","import React from 'react';\nimport './App.css';\nimport PureInput from './components/pureInput'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PureInput />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/js/dist/dropdown';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}